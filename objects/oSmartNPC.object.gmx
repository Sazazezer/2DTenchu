<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sGrappable</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>oNPC</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
finishPointXMod=0; //modifiers for the enemy's finish point, edited in creation code
finishPointYMod=0;
startPathStuff=1; //creation code gets used so path stuff has to be moved to step
stopAtEvent=0;
whereAmI="";
class=0;
wanderSpeed = 1;
patrolSpeed = 2;
chaseSpeed = 3;
searchSpeed = 2;
ResetShunts()
lastKnownPositionX = 0;
lastKnownPositionY = 0;
corpseLocation=0;
startPointX = x;
startPointY = y;
startingDirection=0;
startingSpeed=1;
searching=false;
stateForKiller=true
doIActivate=0;
xshunt=0;
killedPlayer=0;
paranoia=0;
EnemyAIStateSetup();
EnemyAIStats();
AnimatorStateSetup();
state=""; //only serves the gui
patrolDammit=0;
dead=0;
deadCheck = 0;
stopStaringAtTheDead=0
detected=0;
dueling=0;
compoundCultLeader=0; //kill me to win!

talkingToken=0;
iTalk=0;
wordsToSay="";
side="";
check=0;
talkConch=25;
timesSpoken=0;
state="";
speechList();
conversationIndex = irandom(array_height_2d(speech));
conversationLength = array_length_2d(speech,conversationIndex);
dontTalkAgain=0;
sightRange=250
nearestNPC=0;
canTalk=1;

noiseSet = 0;
noiseIHeardX = 0;
noiseIHeardY = 0;
stopASecond=1000;
previousSpeed = 0;
getSpeed=0;
arrowExists=0;
swordExists=0;
attackChoice=2;
alarm12=room_speed*choose(1,2,3);

preferredRange=0;
//duelingrotation

duelCentreX=0;
duelCentreY=0;
duelRotSpeed=2;
duelRotCount=0;
duelRadius=50;
duelAngle=15;

image_xscale=0.25;
image_yscale=0.25;


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>duelRotSpeed=choose(1,1,2,2,0,0,0,-1,-1,-2,-2,3,-3);
duelRotCount=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>attackChoice=choose(1,2,2,2,3,3,3)
swordExists=0;
arrowExists=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="9">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dontTalkAgain=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>states = states.searchingForKiller;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = point_direction(x,y,corpseLocation.x+(choose(-50,0,50)),corpseLocation.y+(choose(-50,0,50)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timesSpoken=0;
searching = false;
path_speed = 1;
talkConch=25;
check=0;
states=states.headHome;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SetMyPath(x,y,myStart.x,myStart.y,path_action_reverse);
path_speed=2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>        MySword = instance_create(x,y,oEnemySword);
        MySword.direction=image_angle;
        MySword.image_angle=MySword.direction;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>direction = point_direction(x,y,lastKnownPositionX+(choose(-50,0,50)),lastKnownPositionY+(choose(-50,0,50)));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>states = states.searching;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>states = states.idle;
speed=choose(0,startingSpeed);
direction=startingDirection;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>searching = false;
searchingForKiller= false;
states=states.headHomeAfterAlert;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (dead!=1){

if (startPathStuff=1) {
    DeterminePreferredRange();
    myStart = instance_create(x,y,obj_Start); //create my starting point
    if (finishPointXMod==0 &amp;&amp; finishPointYMod == 0){
    finishPointXMod=choose(-50,-100, 0,50,100);
    finishPointYMod=choose(-50,-100, 0,50,100);
     }
   /* if (onceBored==1){
    onceBored=0;
    boredPointX=choose(-300,-200,200,500);
    boredPointY=choose(-500,-200,200,500);
    
    if boredPointX&gt;room_width-100{
    boredPointX=boredPointX-500
    }
    
    if boredPointY&gt;=room_height-100{
    boredPointY=boredPointY-500
    }
    }*/
  //  boredPoint= instance_create(x+boredPointX,y+boredPointY,obj_Bored);
    myFinish = instance_create(x+finishPointXMod,y+finishPointYMod,obj_Finish); //create my finishing point     
    myPath = path_add();
    SetMyPath(myStart.x,myStart.y,myFinish.x,myFinish.y,path_action_reverse);
    startPathStuff = 0; //don't keep making paths
    }

if (!instance_exists(myFinish)){

    finishPointXMod = finishPointXMod+choose(-50,50);
    finishPointYXMod = finishPointYMod+choose(-50,50);
    myFinish = instance_create(x+finishPointXMod,y+finishPointYMod,obj_Finish); //create my finishing point     
   // myPath = path_add();
    SetMyPath(myStart.x,myStart.y,myFinish.x,myFinish.y,path_action_reverse);
}
/*if (!instance_exists(boredPoint)){
    boredPointX = boredPointX+choose(-50,50);
    boredPointX = boredPointY+choose(-50,50);
        if boredPointX&gt;room_width-100{
    boredPointX=boredPointX-500
    }
    
    if boredPointY&gt;=room_height-100{
    boredPointY=boredPointY-500
    }
    boredPoint= instance_create(x+boredPointX,y+boredPointY,obj_Bored);
}*/

//image_angle=direction;



TestForSmartObject();
//slideOnWalls();
EnemyCollisionWithSolids();
EnemyAIStateRunning();
WhichAnimateState();
AnimateStateRunning();
//BadGuardCycle()
if place_meeting(x,y,myStart){
    if(stopAtEvent == 1){
    stopAtEvent=0;
    SetMyPath(myStart.x,myStart.y,myFinish.x,myFinish.y,path_action_reverse);
    }
}

if (dontTalkAgain==1){
 alarm[9]=room_speed*90;
}


if(states==states.patrol || states==states.bored || states==states.hasAChat || states==states.headHome) {
    canTalk=1;
}  else {
    canTalk=0;
    }
}
    if (dead=1){
states=states.die;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oNPC">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="parent_SmartObject">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (stopAtEvent==0){
path_speed=0;
stopAtEvent=1;

alarm[6]=room_speed*5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oNoise">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*with (oNoise) {
    SetMyPath(x,y,other.x,other.y, path_action_stop)
    }*/
    
    noiseIHeardX = other.x;
    noiseIHeardY = other.y;
    states=states.heardSomething;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_Start">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if(stopAtEvent == 1){
stopAtEvent=0;
SetMyPath(myStart.x,myStart.y,myFinish.x,myFinish.y,path_action_reverse);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSideWindow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other){
    if (x &gt; other.x){
        x++;
    }  
    if (x &lt; other.x){
        x--;
    } 
    if (y &gt; other.y){
        y++;
    } 
    if (y &lt; other.y){
        y--;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other){
    if (x &gt; other.x){
        x++;
    }  
    if (x &lt; other.x){
        x--;
    } 
    if (y &gt; other.y){
        y++;
    } 
    if (y &lt; other.y){
        y--;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>states=states.die;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//path_delete(myPath);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_text(x+10,y-40,swordExists);
draw_text(x+10,y-30,alarm[10]);
draw_text(x+10,y-10,state);
draw_text(x+10,y,direction);
//draw_text(x+15,y+15,noiseIHeardX);
//draw_text(x+15,y+20,noiseIHeardY);
        
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
