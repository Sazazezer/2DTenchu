<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-150</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
RoofMapping();
repeat(room_width/16) {
instance_create(random(room_width),random(room_height),oDarknessCloud);
}
instance_create(x,y,obj_pause);
missionCompleteSoEscape=1;

inv_init();
inv_data_item();
cursorX = 314;//only change the 100 unit
itemSelected = 2;

/*path stuff*/
alarm[0] = room_speed;
global.AI_grid = mp_grid_create(0,0,room_width / 16, room_height / 16, 32 , 32);
mp_grid_add_instances(global.AI_grid, oSolid, false);
activeItem=0

/*map drawing*/
instance_create(x-500,y-500,oMap);
surface=surface_create(oMap.sprite_width,oMap.sprite_height);
mx=0;
my=0;

/**/

kills=0
alerts=0;
detections=0;
evidence=0;
itemsUsed=0; //this one is a little more complicated


/*Objectives*/
instance_create(0,0,oObjectiveControl);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>activeItem=item[inv[itemSelected,0],1]

/*map drawing*/
mx=mouse_x-oMap.x;
my=mouse_y-oMap.y;

/**/

if keyboard_check_pressed(vk_f4)
   {
   if window_get_fullscreen()
      {
      window_set_fullscreen(false);
      }
   else
      {
      window_set_fullscreen(true);
      }
   }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="50">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* map drawing */

if (oMap.image_alpha==1){
    surface_set_target(surface);
    draw_set_color(c_black);
    draw_line_width(mouse_x-oMap.x,mouse_y-oMap.y,mx,my, 4);
    surface_reset_target();
}

/**/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>mp_grid_destroy(global.AI_grid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inv_show();
  
draw_text(view_xview[0]+50,view_yview[0]+420,itemSelected);
draw_text(view_xview[0]+50,view_yview[0]+440,"Active item is:" + string(activeItem));
draw_text(view_xview[0]+50,view_yview[0]+280,"HP:" + string(oPlayer.playerHP));
draw_text(view_xview[0]+50,view_yview[0]+290,"Kills:" + string(kills));
draw_text(view_xview[0]+50,view_yview[0]+300,"Alerts:" + string(alerts));
draw_text(view_xview[0]+50,view_yview[0]+310,"Detections:" + string(detections));
draw_text(view_xview[0]+50,view_yview[0]+320,"Evidence lying around:" + string(evidence));
draw_text(view_xview[0]+50,view_yview[0]+330,"Items used:" + string(itemsUsed));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*with (oPlayer) {
if (!place_meeting(x,y,oEscape) &amp;&amp; oControl.missionCompleteSoEscape!=0){
draw_text_ext_transformed_colour(view_xport[0]+400, view_yport[0], "Find and Kill the Boss",10,150,2,2,0,c_white,c_white,c_white,c_white,1);
draw_sprite(sEnemy,0,view_xport[0]+750, view_yport[0]+30);
} else if (!place_meeting(x,y,oEscape)){
draw_text_ext_transformed_colour(view_xport[0]+400, view_yport[0], "Escape!",10,150,2,2,0,c_white,c_white,c_white,c_white,1);
} else {
draw_rectangle(0,0,room_width,room_height,false)
draw_text_ext_transformed_colour(view_xport[0]+400, view_yport[0], "Well done. You are a murderer!",10,150,2,2,0,c_white,c_white,c_white,c_white,1);
draw_text_ext_transformed_colour(view_xport[0]+400, view_yport[0]+250, "Press F12 to try murdering again.",10,150,2,2,0,c_white,c_white,c_white,c_white,1);

}

}*/
if(!keyboard_check(vk_shift)){
draw_text_ext_transformed_colour(view_xport[0]+850, view_yport[0]+550, "Press F10 to return to menu",10,150,1,1,0,c_white,c_white,c_white,c_white,1);
draw_text_ext_transformed_colour(view_xport[0]+850, view_yport[0]+700, "Hold Shift for Controls",10,150,1,1,0,c_white,c_white,c_white,c_white,1);
draw_text_ext_transformed_colour(view_xport[0]+850, view_yport[0]+650, "Hold Space to hide roof",10,150,1,1,0,c_white,c_white,c_white,c_white,1);
draw_text_ext_transformed_colour(view_xport[0]+850, view_yport[0]+600, "Press Enter to shift to an NPC",10,150,1,1,0,c_white,c_white,c_white,c_white,1);

} else {
draw_sprite(sKeyboardImage,0,view_xport[0]+450, view_yport[0]+100);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* map drawing */

if (keyboard_check(vk_alt) &amp;&amp; (surface_exists(surface))){
    draw_surface_ext(surface, oMap.x, oMap.y, 1, 1, 0, c_red, 1); 
} else {
   draw_surface_ext(surface, oMap.x, oMap.y, 1, 1, 0, c_red, 0); 
    }
    
    /**/
/*

draw_set_alpha(0.1);
    mp_grid_draw(global.AI_Grid);
for (var i = 0; i &lt; room_width; i+=32;) {
    draw_line(i,0,i,room_height);
    }
for (var i = 0; i &lt; room_height; i+=32;) {
    draw_line(0, i, room_width,i);
    }
    
}*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="123">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="122">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//completing the level code, need to port over after testing

global.levelNumberOfKills = kills;
kills=0;
global.levelNumberOfAlerts = alerts;
alerts=0;
global.levelNumberOfDetections = detections;
detections=0;
global.levelNumberOfEvidence = evidence;
evidence=0;
global.levelNumberOfItems = itemsUsed;
itemsUsed=0;
room_goto(scoringRoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="121">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_goto(titleRoom);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inv_useItem();
inv_remove(inv[itemSelected,0],1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
