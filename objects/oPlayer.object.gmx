<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sTasit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>oPlayer</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>inBuilding=0;
canAttack=1;
canGrapple=1;
playerWalk = 1;
playerRun = 3;
deadSpeed = 0;
onRoof=false;
grappling=false;
dead=false;
range=300;
mID = "";
visibility=0;
noise=0;
groundDepth = global.groundDepth;
roofDepth = global.roofDepth;
grappleDepth = global.grappleDepth;

image_speed=0;
deathTextAngle = 0;
playerHP=100;
recoilSpeed=4;//set recoilSpeed as the speed you wish them to be flung backwards, reduce this if they recoil too fast
playerRecoil=-1;
playerStop=-1;
nearestEnemy=0;
sensing = 0;
controlFreeze = 0;
with(oControl){
    inv_addToSlot(SWORD,1,0)
    inv_addToSlot(GRAPPLING_HOOK,1,1)
}

previousSpeed=0;
trespassing=0 // 0 = safe zone, 1 = escort out zone 2 = INTRUDER!
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canGrapple=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>canAttack=1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>WhatDepthAmI();
WhatIsMyTerrain();
Shunting();
SenseNearestEnemy();
PlayerRestrictionZones();

if (dead=false) {  
/*looking*/
mouseAngle = point_direction(x,y,mouse_x,mouse_y);

/*sprite handling based on image angle*/

if (mouseAngle&gt;=45 &amp;&amp;mouseAngle&lt;135){
    sprite_index = sTasitUp;
    } else if (mouseAngle&gt;=135 &amp;&amp;mouseAngle&lt;225){
    sprite_index = sTasitLeft;
    } else if (mouseAngle&gt;=225 &amp;&amp;mouseAngle&lt;315){
    sprite_index = sTasitDown;
    } else if((mouseAngle&gt;=315 &amp;&amp;mouseAngle&lt;360) || mouseAngle&gt;=0 &amp;&amp; mouseAngle&lt;45){
    sprite_index = sTasitRight;
    }


/*everything a function now*/
PlayerMovement();
PlayerCollisions()
PlayerAttacking();
PlayerGrappling();


if (keyboard_check(vk_delete)){
       inv_removeFromSlot(2);
}


   if (!place_meeting(x,y,oSeeIntoBuilding)) {  //pink tiles let you look into a building
    var tiles = tile_get_ids_at_depth(-1);
for (var i = 0; i &lt; array_length_1d(tiles); i++;)
   {
   tile_set_alpha(tiles[i], 1);
   }
   
   tiles=0;
   }
PlayerRecoil()
    
if playerHP&lt;=0{
   dead=true;
   }

}else if (dead=true){ //it doesn't matter when yer dead
PlayerDead();
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEnterBuilding">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>InsideBuilding();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSeeIntoBuilding">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SeeIntoBuilding();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oLeaveBuilding">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>OutsideBuilding();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oSideWindow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other){
    if (oPlayer.x &gt; other.x){
        x++;
    }  
    if (oPlayer.x &lt; other.x){
        x--;
    } 
    if (oPlayer.y &gt; other.y){
        y++;
    } 
    if (oPlayer.y &lt; other.y){
        y--;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oWall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other){


       if (oPlayer.x &gt; other.x){
            x++;
        }  
        if (oPlayer.x &lt; other.x){
            x--;
        } 
        if (oPlayer.y &gt; other.y){
            y++;
        } 
        if (oPlayer.y &lt; other.y){
            y--;
        } 
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEnemyArrow">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>  
    with(other){
    
        if (hit=0){   
          playerRecoil=5;
   
     }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oGrapple">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>speed = 0;
grappling=false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="oEnemySword">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*with(other){
    if (depth=oPlayer.depth){*/
    //oPlayer.dead=true;
    playerRecoil=5;
   /* }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*var i;
var door;
for (i = 0 ; i &lt; instance_number(oTeleport) ; i+=1)
{
  door = instance_find(oTeleport,i);

  if (door.mID = oPlayer.mID) and (oPlayer.mID != "")
  {
    oPlayer.x = door.x;
    oPlayer.y = door.y;
    oPlayer.mID = "";
    break;  // exit for loop
  }
} 
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw_set_halign(fa_middle);
//draw_set_valign(fa_middle);
//draw_text(x,y,point_direction(x,y,mouse_x,mouse_y));

draw_text(x+10,y+10,x);
draw_text(x+20,y+10,y);

if (sensing&gt;= -100){
draw_text(view_xview[0]+50,view_yview[0]+350,sensing);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

if (dead==true) {
draw_set_halign(fa_center);
draw_set_valign(fa_middle);
deathTextAngle += 1;
//draw_text_transformed(view_xport[0] / 2, view_yport[0] / 2, "OH NO. DEATH!", 2, 2, image_angle);
draw_text_ext_transformed_colour(view_xport[0]+350, view_yport[0]+125, "OH NO. DEATH!", 10,300, 2, 2, deathTextAngle, c_red, c_red, c_red, c_red, 1);
draw_text_ext_transformed_colour(view_xport[0]+350, view_yport[0]+350, "Press F12 to restart",10,300,2,2,0,c_white,c_white,c_white,c_white,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
